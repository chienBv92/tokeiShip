@using ShipOnline.Resources;
@using ShipOnline.Models.Entity;
@using ShipOnline.Models.Define;

@model GroupAreaModel
@{
    ViewBag.Title = AdminLabel.GroupAreaRegisterTitle;
    if (@Model.GROUP_CD != null && @Model.GROUP_CD > 0)
    {
        ViewBag.Title = AdminLabel.GroupAreaUpdateTitle;
    }
    Layout = "~/Views/Layout/_LayoutAdmin.cshtml";
}

<div id="GroupAreaRegister" class="edit-screen">
    @using (Html.BeginForm("EditGroup", "AdminManageDistrict", FormMethod.Post, new { id = "formAreaRegis", enctype = "multipart/form-data", @class = "form-horizontal" }))
    {
        <div id="title">@ViewBag.Title</div>
        <input id="GROUP_CD" name="GROUP_CD" type="hidden" value="@Model.GROUP_CD">

        @Html.HiddenFor(m => m.DEL_FLG, new { @class = "del-flg" })
        @Html.HiddenFor(m => m.FOR_USER, new { @class = "forUser" })
        <div class="form-group">
            <label class="title-row">@AdminLabel.lblGroupName <span class="RequiredField">*</span></label>
            @Html.TextBoxFor(m => m.GROUP_NAME, new { @class = "txt-w-250", maxlength = 100 })
        </div>

        <div class="form-group">
            <label class="title-row">@AdminLabel.lblAreaForUser </label>
            @if (Model.GROUP_CD > 0)
            {
                <div style="display:inline-block"><label class="text-normal">@Model.FOR_USER_TEXT</label></div>
            }else
            {
                foreach (var item in (SelectList)ViewBag.GetGroupForUser)
                {
                    <label class="lbRadioBtn">
                        @Html.RadioButtonFor(m => m.FOR_USER, item.Value)
                        @item.Text
                    </label>
                }
            }
            
        </div>

        <div id="mainContent" class="auto-overflow">
            <table id="AddTable" class="dataTable" cellspacing="0">
                <thead>
                    <tr>
                        <th>Chọn khu vực<span class="RequiredField">*</span></th>

                        <th class="no-display"></th>
                    </tr>
                </thead>
                <tbody>
                    <tr role="row" class="odd">
                        <td class=" cell_left">
                            @Html.DropDownListFor(m => m.CITY_CD, Model.CITY_LIST, new { @class = "margin-0 renderCity" })
                            @Html.DropDownListFor(m => m.DISTRICT_CD_KEY, Model.DISTRICT_LIST, "", new { @class = "renderDistrict" })
                            @Html.DropDownListFor(m => m.TOWN_CD_KEY, Model.TOWN_LIST, "", new { @class = "renderTown" })

                            @Html.HiddenFor(m => m.DISTRICT_CD_KEY)
                            @Html.HiddenFor(m => m.TOWN_CD_KEY)
                        </td>
                        <td class=" cell_right">
                            <button type="button" class="btn btn-green btnAddTown" id="btnAddTown" name="btnAddTown"> <i class="btn-icon btn-add-item">Thêm</i></button>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
        <div class="form-group highlight-zone div-list-town">
            <table id="InfoTable" class="dataTable" style="width: 840px" cellspacing="0">
                <thead>
                    <tr>
                        <th class="header-stt">STT</th>
                        <th class="header-status" style="width: 60px">Trạng thái</th>
                        <th class="header-area">Khu vực<span class="RequiredField">*</span></th>
                        <th class="header-order">Số sắp xếp<span class="RequiredField">*</span></th>
                        <th class="header-delete">Xóa</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model.LIST_TOWN != null && Model.LIST_TOWN.Count > 0)
                {
                    for (int i = 0; i < Model.LIST_TOWN.Count(); i++)
                    {
                        if (Model.LIST_TOWN[i].TOWN_CD != 0)
                        {
                            int index = i + 1;
                            string rowClass = index % 2 != 0 ? "odd" : "even";

                    <tr class="@rowClass">
                        <td>
                            @Html.HiddenFor(m => m.LIST_TOWN[i].CITY_CD, new { @class = "city-cd" })
                            @Html.HiddenFor(m => m.LIST_TOWN[i].DISTRICT_CD, new { @class = "district-cd" })
                            @Html.HiddenFor(m => m.LIST_TOWN[i].TOWN_CD, new { @class = "town-cd" })
                            @*@Html.HiddenFor(m => m.LIST_TOWN[i].GROUP_CD_RECEIVE, new { @class = "receive-group-cd" })
                            @Html.HiddenFor(m => m.LIST_TOWN[i].DSP_ORDER_RECEIVE, new { @class = "receive-order-dsp" })
                            @Html.HiddenFor(m => m.LIST_TOWN[i].GROUP_CD_SENDER, new { @class = "sender-group-cd" })
                            @Html.HiddenFor(m => m.LIST_TOWN[i].DSP_ORDER_SENDER, new { @class = "sender-order-dsp" })*@
                            @Html.HiddenFor(m => m.LIST_TOWN[i].GROUP_CD, new { @class = "group-cd" })
                            @*@Html.HiddenFor(m => m.LIST_TOWN[i].DSP_ORDER, new { @class = "order-dsp" })*@

                            @Html.HiddenFor(m => m.LIST_TOWN[i].DEL_FLG, new { @class = " del-flg" })

                            <input class="short-text text-overflow txt-no-border row-num" value="@index" disabled="disabled" style="width:42px" />

                        </td>
                        <td class="short-text text-overflow is-new-record"></td>
                        <td>
                            <input class="txt-no-border city-name" type="text" title="@Model.LIST_TOWN[i].CITY_NAME" value="@Model.LIST_TOWN[i].CITY_NAME" disabled="disabled">
                            <input class="txt-no-border space" type="text" value="/" disabled="disabled">
                            <input class="txt-no-border district-name" title="@Model.LIST_TOWN[i].DISTRICT_NAME" value="@Model.LIST_TOWN[i].DISTRICT_NAME" disabled="disabled">
                            <input class="txt-no-border space" type="text" value="/" disabled="disabled">
                            <input class="txt-no-border town-name " title="@Model.LIST_TOWN[i].TOWN_NAME" value="@Model.LIST_TOWN[i].TOWN_NAME" disabled="disabled">
                        </td>

                        <td>
                            <input type="text" maxlength="3" class="dsp-order numeric valid" name="LIST_TOWN[@i].DSP_ORDER" value="@Model.LIST_TOWN[i].DSP_ORDER">
                        </td>
                        <td><button type="button" class="btn btn-red btn-add-on btnDeleteTown" id="btnDeleteTown" name="btnDeleteTown" data-index="@index" data-city-cd="@Model.LIST_TOWN[i].CITY_CD" data-district-cd="@Model.LIST_TOWN[i].DISTRICT_CD" data-town-cd="@Model.LIST_TOWN[i].TOWN_CD">Xóa</button></td>
                    </tr>
                        }
                    }
                }

                </tbody>
            </table>
        </div>


        <div class="form-group action-button-bottom">
            <button type="button" id="btnBack" name="btnBack" class="btn btn-default"><i class="btn-icon btn-back">@AdminLabel.btnBack</i></button>
            <div class="pull-right">
                <button type="button" id="btnClear" name="btnClear" class="btn btn-default"><i class="btn-icon btn-clear">@AdminLabel.btnClear</i></button>
                <button type="button" id="btnSubmit" name="btnSubmit" class="btn btn-orange"><i class="btn-icon btn-edit">@AdminLabel.btnRegister</i></button>
            </div>
        </div>
    }

</div>

<script>

    var checkTimeOutUrl = '@Url.Action("CheckTimeOut", "Common", new { area = "Common" })';
    var UrlGroupAreaList = '@Url.Action("GroupList", "AdminManageDistrict")';


    $(function () {
        ShipOnline.utility.validFullHalfSize($(".dsp-order"));
        ShipOnline.utility.imeControl($(".dsp-order"), 'disable');
        ShipOnline.utility.checkInputNumber($(".dsp-order"));

        ShipOnline.utility.bindDistrictExtend2($('.renderCity'), $('.renderDistrict'), $('.renderTown'));
        ShipOnline.utility.bindTown($('.renderCity'), $('.renderDistrict'), $('.renderTown'));
    });

    function validateData() {
        var invalidMess = [];
        var groupName = $('#GROUP_NAME').val();
        var countRow = $('.div-list-town').find('.dataTable tbody tr').length;

        var errContent = [];
        var errDisplay = [];
        var invalidMess = [];

        // validate user group name
        if (groupName == null || groupName.trim() == "") { // required content
            errDisplay = '@AdminLabel.lblGroupName' + Constant.ERR_REQUIRED;
            invalidMess.push(errDisplay);
        }
        else if (groupName.trim().length > 100) {
            invalidMess.push("@string.Format(Message.CheckMaxLength, @AdminLabel.lblGroupName, Constant.MAX_EMAIL_LENGTH)");
        }

        if (countRow > 0) {
            $('.dsp-order').each(function () {
                if (this.value == "" || this.value == null) {
                    errDisplay = '@AdminLabel.lblOrderSort' + Constant.ERR_REQUIRED;
                    invalidMess.push(errDisplay);
                }

                if (this.value.length > 3) {
                    invalidMess.push("@string.Format(Message.CheckMaxLength, @AdminLabel.lblOrderSort, 3)");
                    invalidMess.push(errContent);
                }

            });
        }
       
        return invalidMess;
    }

    $(document).off('#CITY_CD');
    $(document).on('change', '#CITY_CD', function () {
        //if (!iseiQ.utility.getDataByAjax(checkTimeoutUrl, null)) return;

        $('.renderDistrict').val('');
        $('.renderTown').val('');

        ShipOnline.utility.bindDistrictExtend2($('.renderCity'), $('.renderDistrict'), $('.renderTown'));
    });

    $(document).off('#DISTRICT_CD_KEY');
    $(document).on('change', '#DISTRICT_CD_KEY', function () {
        //if (!iseiQ.utility.getDataByAjax(checkTimeoutUrl, null)) return;

        $('.renderTown').val('');

        ShipOnline.utility.bindTown($('.renderCity'), $('.renderDistrict'), $('.renderTown'));
    });

    

    $(document).off('#btnSubmit');
    $(document).on('click', '#btnSubmit', function () {
        //var result = ShipOnline.utility.getDataByAjax(checkTimeOutUrl, null);
        //if (!result) return;
        var countRow = $('.div-list-town').find('.dataTable tbody tr').length;
        if (countRow == 0) {
            ShipOnline.utility.showMessageModal('@Message.msgHaveMoreAddress', true);
            return;
        }
        $('.validation-summary-errors').remove();
        var invalidMess = validateData();
        if (invalidMess.length > 0) {
            ShipOnline.utility.showClientError(invalidMess);
            return false;
        }

        var confirmMess = '@string.Format(Message.ConfirmSubmitData, (Model.GROUP_CD > 0 ? Message.Update : Message.Register))';

        ShipOnline.utility.showConfirmModal(confirmMess, function (action) {
            if (action) {
                var groupCd = $('#GROUP_CD').val();
                if (groupCd == 0) {
                    $('#FOR_USER').val($('input[name=FOR_USER]:checked').val());
                }

                $("#formAreaRegis").submit();
            }
        });
    });

    $('#formAreaRegis').submit(function (event) {
        var formData = new FormData($(this)[0]);
        $.ajax(
            {
                url: '@Url.Action("EditGroup", "AdminManageDistrict")',
                data: formData,
                mimeType: "multipart/form-data",
                type: 'POST',
                contentType: false,
                processData: false,
                success: function (res) {
                    window.parent.$('.ui-dialog-content:visible').dialog('close');
                    var result = jQuery.parseJSON(res);
                    var message = "";
                    if (result.ErrorMessages) {
                        for (var i = 0; i < result.ErrorMessages.length; i++) {
                            message += result.ErrorMessages[i] + "\n";
                        }
                        ShipOnline.utility.showMessageModal(message, true);
                    } else {
                        message = result.isNew == true ? "@Message.RegisterSuccess" : "@Message.UpdateSuccess";
                        ShipOnline.utility.showMessageModal(message, false, function () {
                            window.location.href = UrlGroupAreaList;
                        });
                    }
                },
                error: function (xhr) {
                    window.parent.$('.ui-dialog-content:visible').dialog('close');
                    window.location.href = '/Common/Common/CloseIframe/';
                }
            });
        event.preventDefault();
    });

    $(document).off('#btnClear');
    $(document).on('click', '#btnClear', function () {
        ShipOnline.utility.showConfirmModal('@string.Format(@Message.ConfirmClear)', function (action) {
            $('.validation-summary-errors').remove();

            if (action) {
                if ($('#GROUP_CD').val() == 0) {
                    $("#GROUP_NAME").val("");
                    $("#FOR_USER").val(0);
                    $('[name="FOR_USER"][value="@GroupForUser.ReceiveUser"]').prop('checked', true);

                    $('.renderCity').val('');
                    $('.renderDistrict').val('');
                    $('.renderTown').val('');
                    ShipOnline.utility.bindDistrictExtend2($('.renderCity'), $('.renderDistrict'), $('.renderTown'));
                    ShipOnline.utility.bindTown($('.renderCity'), $('.renderDistrict'), $('.renderTown'));

                    checkRemoveNewRecord();
                } else {

                    $("#GROUP_NAME").val('@Model.GROUP_NAME');

                    $('.renderCity').val('');
                    $('.renderDistrict').val('');
                    $('.renderTown').val('');
                    ShipOnline.utility.bindDistrictExtend2($('.renderCity'), $('.renderDistrict'), $('.renderTown'));
                    ShipOnline.utility.bindTown($('.renderCity'), $('.renderDistrict'), $('.renderTown'));
                    checkRemoveNewRecord();
                }
            }
        })
    });

    // Button Back
    $(document).off('#btnBack');
    $(document).on('click', '#btnBack', function () {
        ShipOnline.utility.showConfirmModal('@string.Format(@Message.ConfirmBack)', function (action) {
            if (action) {

                $(window).off('beforeunload');
                window.location.href = UrlGroupAreaList;
            }
        })
    });

    // Add Account Billing
    $(document).off('#btnAddTown');
    $(document).on('click', "#btnAddTown", function () {
        // check time out
        @*var sUrl = '@Url.Action("CheckTimeOut", "Common", new {area = "Common"})';
        var result = iseiQ.utility.getDataByAjax(sUrl, null);*@

        //if (!result)
        //    return;

        // Check empty datable
        if ($('.dataTables_empty').length == 1) {
            $('#InfoTable tbody').empty();
        }

        var cityCD = $('#CITY_CD').val();
        var districtCodeKey = $('#DISTRICT_CD_KEY').val();
        var districtCode = districtCodeKey != null ? districtCodeKey.split('_')[1] : 0;
        var townCdKey = $('#TOWN_CD_KEY').val();
        var townCd = townCdKey != null ? townCdKey.split('_')[2] : 0;
        var forUser = $('input[name=FOR_USER]:checked').val();
        var groupCd = $('#GROUP_CD').val();
        if (groupCd > 0) {
            forUser = $('#FOR_USER').val();
        }
        if ((cityCD == null || cityCD.trim() == "" || cityCD == 0) ||
             (districtCodeKey == null || districtCodeKey.trim() == "" || districtCode == 0) ||
             (townCdKey == null || townCdKey.trim() == "" || townCd == 0)) {
            ShipOnline.utility.showMessageModal("Địa chỉ không được để trống!", true);
            return;
        }

        var paramCheckExistCd = {
            cityCd: cityCD,
            districtCd: districtCode,
            townCD: townCd,
            forUser: forUser
        };

        if (cityCD > 0) {
            var data = ShipOnline.utility.getDataByAjax('@Url.Action("CheckExistGroupTown", "AdminManageTown")', paramCheckExistCd);
            if (typeof (data) != 'undefined' || data != null) {
                existGroupCD = data.exist;
            }
        }
        if (existGroupCD) {
            ShipOnline.utility.showMessageModal("Khu vực đã được đăng kí!", true);
            return;
        }
        var flagexist = 0;
        // Check exist town in table
        $('#InfoTable tbody tr').each(function (index, element) {
            if (cityCD == $(element).find('.city-cd').val()
                    && districtCode == $(element).find('.district-cd').val()
                    && townCd == $(element).find('.town-cd').val()
                ) {
                ShipOnline.utility.showMessageModal("Khu vực đã tồn tại!", true);
                flagexist = 1;
                return;
            }
        });

        if (flagexist == 0) {
            //Add new row at the end of datatable
            AddNewRowIntoDataTable();
            resetArrTable();
        }
    });

    function AddNewRowIntoDataTable() {
        // Add new row
        var html = '';
        var totalCurrentRow = $('#InfoTable >tbody >tr').length;
        var No = totalCurrentRow + 1;

        var cityCD = $('#CITY_CD').val();
        var districtCodeKey = $('#DISTRICT_CD_KEY').val();
        var districtCode = districtCodeKey != null ? districtCodeKey.split('_')[1] : 0;
        var townCdKey = $('#TOWN_CD_KEY').val();
        var townCd = townCdKey != null ? townCdKey.split('_')[2] : 0;

        html = (totalCurrentRow % 2 == 0) ? '<tr role="row" class="odd">' : '<tr role="row" class="even">';
        html += '<td class="cell_left">' + '<input class="txt-no-border row-num" style="width:42px;" type="text" title="' + No + '" value="' + No + '" disabled="disabled">' + '</td>'
             + '<td class="cell_center">' + '<div class="short-text text-overflow is-new-record" title="' + '○' + '">' + '○' + '</div>' + '</td>'

             + '<td class="cell_left">'
                + '<input class="city-cd" name="LIST_TOWN[' + totalCurrentRow + '].CITY_CD" type="hidden" value="' + cityCD + '">'
                + '<input class="district-cd" name="LIST_TOWN[' + totalCurrentRow + '].DISTRICT_CD" type="hidden" value="' + districtCode + '">'
                + '<input class="town-cd" name="LIST_TOWN[' + totalCurrentRow + '].TOWN_CD" type="hidden" value="' + townCd + '">'
                + '<input class="group-cd" name="LIST_TOWN[' + totalCurrentRow + '].GROUP_CD" type="hidden" value="'+ 0 +'">'

                + '<input class="txt-no-border city-name" type="text" title="' + $("#CITY_CD :selected").text() + '" value="' + $("#CITY_CD :selected").text() + '" disabled="disabled">'
                + '<input class="txt-no-border space" type="text" value="/" disabled="disabled">'
                + '<input class="txt-no-border district-name" type="text" title="' + $("#DISTRICT_CD_KEY :selected").text() + '" value="' + $("#DISTRICT_CD_KEY :selected").text() + '" disabled="disabled">'
                + '<input class="txt-no-border space" type="text" value="/" disabled="disabled">'
                + '<input class="txt-no-border town-name" type="text" title="' + $("#TOWN_CD_KEY :selected").text() + '" value="' + $("#TOWN_CD_KEY :selected").text() + '" disabled="disabled">'
                + '</td>'

             + '<td class="cell_left">'
                + '<input class="dsp-order numeric valid" maxlength="3" type="text" value="" name="LIST_TOWN[' + totalCurrentRow + '].DSP_ORDER">'
                + '</td>'

             + '<td class="cell_center">'
                + '<button type="button" class="btn btn-red btn-add-on btnDeleteTown" id="btnDeleteTown" name="btnDeleteTown" data-city-cd="0" data-district-cd="0" data-town-cd="0" data-index="' + No + '">Xóa</button>'
                + '</td>'

             + '</tr>';

        $('#InfoTable tbody').append(html);
    }

    // Get data table Billing
    function resetArrTable() {
        var $parentElement = $('.div-list-town');
        var $tbRows = $parentElement.find('.dataTable tbody tr');

        for (var i = 0; i < $tbRows.length; i++) {
            var prefix = 'LIST_TOWN[' + i + '].';
            var $tbTargetRow = $($parentElement.find('.dataTable tbody tr')[i]);
            var rowClass = i % 2 == 0 ? 'odd' : 'even';

            $tbTargetRow.removeAttr('class').addClass(rowClass);
            $tbTargetRow.find('.city-cd').attr('name', prefix + 'CITY_CD');
            $tbTargetRow.find('.district-cd').attr('name', prefix + 'DISTRICT_CD');
            $tbTargetRow.find('.town-cd').attr('name', prefix + 'TOWN_CD');
            $tbTargetRow.find('.group-cd').attr('name', prefix + 'GROUP_CD');

            $tbTargetRow.find('.city-name').attr('name', prefix + 'CITY_NAME');
            $tbTargetRow.find('.district-name').attr('name', prefix + 'DISTRICT_NAME');
            $tbTargetRow.find('.town-name').attr('name', prefix + 'TOWN_NAME');

            $tbTargetRow.find('.order-dsp').attr('name', prefix + 'DSP_ORDER');
            $tbTargetRow.find('.dsp-order').attr('name', prefix + 'DSP_ORDER');
            $tbTargetRow.find('.del-flg').attr('name', prefix + 'DEL_FLG');

            $tbTargetRow.find('.row-num').val(i + 1);

            $tbTargetRow.find('.btnDeleteTown').data('index', i + 1);
        }
    }

    $('input[name=FOR_USER]').change(function () {
        var forUser = $('input[name=FOR_USER]:checked').val();
        checkRemoveNewRecord();
    });

    function checkRemoveNewRecord() {

        $('#InfoTable tbody tr').each(function (index, element) {
            if ($(element).find('.group-cd').val() == 0)                
            {
                $(element).remove();
            }
        });
        resetArrTable();
    }

    //Delete Town in list
    $(document).off('#btnDeleteTown');
    $(document).on('click', "#btnDeleteTown", function () {
        // check time out
        @*var sUrl = '@Url.Action("CheckTimeOut", "Common", new {area = "Common"})';
        var result = iseiQ.utility.getDataByAjax(sUrl, null);*@

        //if (!result)
        //    return;

        var cityCd = $(this).data('city-cd');
        var districtCd = $(this).data('district-cd');
        var townCd = $(this).data('town-cd');
        var forUser = $('#FOR_USER').val();

        if (townCd == 0) {
            var rowAdd = $($(this).closest("tr"));
            var indexAdd = ($(this).data('index'));
            ShipOnline.utility.showConfirmModal('@Message.ConfirmDeleteRow' + indexAdd + ' mới thêm?', function (action) {
                if (action) {
                    rowAdd.remove();
                    resetArrTable();
                    //resetElementName();
                }
            });
            return;
        }

        var $parentTR = $(this).closest('tr');
        var index = ($(this).data('index'));

        var param = {
            cityCd: cityCd,
            districtCd: districtCd,
            townCD: townCd,
            forUser: forUser
        };
        ShipOnline.utility.showConfirmModal('@Message.ConfirmDeleteRow' + index + " ?", function (action) {
            if (action) {
                $parentTR.remove();
                $.ajax({
                    cache: false,
                    type: "GET",
                    url: '@Url.Action("DeleteTownInArea")',
                    data: param,
                    success: function (data) {
                        $(this).remove();
                        resetArrTable();
                    },
                    error: function (xhr, ajaxOptions, thrownError) {
                        ShipOnline.utility.showMessageModal("@string.Format(Message.ConfirmDeleteError, "OK")", true);
                    }
                });
            }
        });
    });

</script>




